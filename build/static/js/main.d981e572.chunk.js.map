{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","weatherData","setWeatherData","city","setCity","className","placeholder","onChange","e","target","value","onKeyPress","event","key","fetch","then","response","json","data","main","name","Math","round","temp","wearther","cod","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAsDeA,MApDf,WAEE,IACA,EAAoCC,mBAAS,CAAC,KAA9C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAuBF,mBAAS,IAAhC,mBAAOG,EAAP,KAAaC,EAAb,KAgBA,OACE,sBAAKC,UAAU,YAAf,UACE,uBAAOA,UAAU,QAAQC,YAAY,gBACrCC,SAAU,SAAAC,GAAC,OAAIJ,EAAQI,EAAEC,OAAOC,QAChCA,MAAOP,EACPQ,WAnBe,SAACC,GACA,UAAdA,EAAMC,KACRC,MAAM,gFAAgFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC9GF,MACA,SAAAG,GACEhB,EAAegB,GACfd,EAAQ,UAgBgB,qBAApBH,EAAYkB,KAClB,8BACE,iGAGF,sBAAKd,UAAU,cAAf,UACC,mBAAGA,UAAU,OAAb,SAAqBJ,EAAYmB,OACjC,oBAAGf,UAAU,OAAb,UAAqBgB,KAAKC,MAAMrB,EAAYkB,KAAKI,MAAjD,YACA,mBAAGlB,UAAU,UAAb,SAAwBJ,EAAYuB,SAAS,GAAGL,UAKhC,QAAlBlB,EAAYwB,IACX,gDAEA,iCClCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.d981e572.chunk.js","sourcesContent":["import React, {useState, setWeatherData} from 'react'\nimport'./App.css'\nfunction App() {\n\n  const apiKey =\"78ec95bff88887906c54f56a4063adfe\" \n  const [weatherData, setWeatherData]=useState([{}])\n  const [city, setCity]= useState(\"\")\n\n  const getWeather = (event) =>{\n    if (event.key === \"Enter\"){\n      fetch('https://api.openweathermap.org/data/2.5/weather?q={city name}&appid={apiKey}').then(response => response.json()\n      ).then(\n        data => {\n          setWeatherData(data)\n          setCity(\"\")\n\n        }\n      )\n\n      \n    }\n  }\n  return (\n    <div className=\"container\">\n      <input className=\"input\" placeholder=\"Enter City...\"\n      onChange={e => setCity(e.target.value)}\n      value={city}\n      onKeyPress={getWeather}\n      />\n\n      {typeof weatherData.main ==='undefined' ? (\n        <div>\n          <p>Welcome to weather app! Enter in a city to get the weather of.</p>\n        </div>\n      ): (\n        <div className='weather-daa'>\n         <p className='city'>{weatherData.name}</p>\n         <p className='temp'>{Math.round(weatherData.main.temp)}â„‰</p>\n         <p className='waether'>{weatherData.wearther[0].main}</p>\n         </div>\n\n      )}\n\n      {weatherData.cod===\"404\" ?(\n        <p>City not found.</p>\n      ): (\n        <>\n        </>\n      )}\n      \n    </div>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}